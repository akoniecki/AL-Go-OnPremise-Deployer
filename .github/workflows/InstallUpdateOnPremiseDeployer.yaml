name: Install or Update AL-Go OnPremise Deployer

on:
  schedule:
    - cron: '0 10 1-7 * 2'  # First Tuesday of the month at 10:00 AM
    - cron: '0 10 15-21 * 2'  # Third Tuesday of the month at 10:00 AM
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    shell: powershell

jobs:
  InstallUpdateOnPremiseDeployer:
    name: 'Install/Update AL-Go OnPremise Deployer'
    runs-on: [windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialize the workflow
      id: init
      uses: microsoft/AL-Go-Actions/WorkflowInitialize@v5.2
      with:
        eventId: "DO0098"

    - name: Read settings
      uses: microsoft/AL-Go-Actions/ReadSettings@v5.2
      with:
        get: templateUrl

    - name: Read secrets
      id: ReadSecrets
      uses: microsoft/AL-Go-Actions/ReadSecrets@v5.2
      with:
        gitHubSecrets: ${{ toJson(secrets) }}
        getSecrets: 'ghTokenWorkflow'

    - name: Install/Update AL-Go OnPremise Deployer
      run: |
        try {
          Write-Output "Importing helpers"
          $helperBasePath = "..\..\_actions\microsoft\AL-Go-Actions\"
          $alGoActionsPath = Get-ChildItem -Path $helperBasePath -Directory | Sort-Object Name -Descending | Select-Object -First 1
          if ($null -eq $alGoActionsPath) {
              throw "AL-Go-Actions directory not found."
          }
          . (Join-Path -Path $alGoActionsPath.FullName -ChildPath "AL-Go-Helper.ps1" -Resolve)

          Write-Output "Downloading latest AL-Go OnPremise Deployer..."
          $token = "${{ secrets.ghTokenWorkflow }}"
          $serverUrl, $branch = CloneIntoNewFolder -actor 'akoniecki' -token $token -DirectCommit $false -newBranchPrefix 'update-al-go-onpremise-deployer'
        
          $update = Test-Path ".github\DeployToOnPremise.ps1"

          if (!$update) {
            Write-Output "AL-Go OnPremise Deployer is not installed. Preparing for installation."
            Invoke-WebRequest -Uri "https://raw.githubusercontent.com/akoniecki/AL-Go-OnPremise-Deployer/main/.github/workflows/InstallUpdateOnPremiseDeployer.yaml" -OutFile ".github\workflows\InstallUpdateOnPremiseDeployer.yaml"
            Invoke-WebRequest -Uri "https://raw.githubusercontent.com/akoniecki/AL-Go-OnPremise-Deployer/main/.github/DeployToOnPremise.ps1" -OutFile ".github\DeployToOnPremise.ps1"
          } else {
            Write-Output "AL-Go OnPremise Deployer is installed. Preparing for update."
            Invoke-WebRequest -Uri "https://raw.githubusercontent.com/akoniecki/AL-Go-OnPremise-Deployer/main/.github/workflows/InstallUpdateOnPremiseDeployer.yaml" -OutFile ".github\workflows\InstallUpdateOnPremiseDeployer_origin.yaml"
            Invoke-WebRequest -Uri "https://raw.githubusercontent.com/akoniecki/AL-Go-OnPremise-Deployer/main/.github/DeployToOnPremise.ps1" -OutFile ".github\DeployToOnPremise_origin.ps1"
          }        
          Write-Output "Latest AL-Go OnPremise Deployer downloaded."

          if ($update) {
            Write-Output "Starting AL-Go OnPremise Deployer update."
            Write-Output "Removing scheduler settings in workflow definitions..."
            (Get-Content ".github\workflows\InstallUpdateOnPremiseDeployer.yaml") -notmatch 'on:' | Set-Content ".github\workflows\InstallUpdateOnPremiseDeployer_no_schedule.yaml"
            (Get-Content ".github\workflows\InstallUpdateOnPremiseDeployer_origin.yaml") -notmatch 'on:' | Set-Content ".github\workflows\InstallUpdateOnPremiseDeployer_origin_no_schedule.yaml"
            Write-Output "Scheduler settings removed." 
            Write-Output "Preserving scheduler settings..."
            (Get-Content ".github\workflows\InstallUpdateOnPremiseDeployer.yaml") -match 'on:' | Set-Content ".github\workflows\InstallUpdateOnPremiseDeployer_schedule_settings.yaml"
            Write-Output "Scheduler settings preserved."

            Write-Output "Checking for updates..."
            $differenceYaml = Compare-Object (Get-Content ".github\workflows\InstallUpdateOnPremiseDeployer_no_schedule.yaml") (Get-Content ".github\workflows\InstallUpdateOnPremiseDeployer_origin_no_schedule.yaml")
            $differencePs = Compare-Object (Get-Content ".github\DeployToOnPremise.ps1") (Get-Content ".github\DeployToOnPremise_origin.ps1")

            if (($differenceYaml -eq $null) -And ($differencePS -eq $null)) {
              Write-Output "No updates available."
            } else {
              Write-Output "Updates found. Applying..."
              (Get-Content ".github\DeployToOnPremise_origin.ps1") | Set-Content ".github\DeployToOnPremise.ps1"
              (Get-Content ".github\workflows\InstallUpdateOnPremiseDeployer_schedule_settings.yaml") + (Get-Content ".github\workflows\InstallUpdateOnPremiseDeployer_origin_no_schedule.yaml") | Set-Content ".github\workflows\InstallUpdateOnPremiseDeployer.yaml"
              Write-Output "Updates applied."
            }

            Write-Output "Removing temporary files..."
            Remove-Item -Force ".github\workflows\InstallUpdateOnPremiseDeployer_no_schedule.yaml"
            Remove-Item -Force ".github\workflows\InstallUpdateOnPremiseDeployer_origin_no_schedule.yaml"
            Remove-Item -Force ".github\workflows\InstallUpdateOnPremiseDeployer_schedule_settings.yaml"
            Remove-Item -Force ".github\workflows\InstallUpdateOnPremiseDeployer_origin.yaml"
            Remove-Item -Force ".github\DeployToOnPremise_origin.ps1"
            Write-Output "Temporary files removed."
          }

          Write-Output "Committing changes..."
          $commit_msg = "Install/Update AL-Go OnPremise Deployer"  
          CommitFromNewFolder -serverUrl $serverUrl -commitMessage $commit_msg -branch $branch
        } catch {
          Write-Error "An error occurred: $_"
          exit 1
        }
